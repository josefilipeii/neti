name: Deploy to Firebase

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm and dependencies
        run: |
          npm i -g pnpm
          pnpm -r install --frozen-lockfile

      - name: Generate .env for checkin app
        run: |
          echo "${{ vars.CHECKIN_ENVS }}" > ./apps/checkin/.env
          echo "Generated .env for checkin"

      - name: Generate .env for self-checkin app
        run: |
          echo "${{ vars.SELF_CHECKIN_ENVS }}" > ./apps/self-checkin/.env
          echo "Generated .env for self-checkin"

      - name: Generate .env for admin-dashboard app
        run: |
          echo "${{ vars.ADMIN_DASHBOARD_ENVS }}" > ./apps/admin-dashboard/.env
          echo "Generated .env for admin-dashboard"

      - name: Build Project
        run: |
          pnpm --filter shared run build
          pnpm -r build

      - name: Set Up Firebase Authentication
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > $HOME/serviceAccountKey.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/serviceAccountKey.json" >> $GITHUB_ENV

      - name: Setup .env for functions
        run: |
          echo "QR_CODE_SECRET_KEY=${{ secrets.FIREBASE_SECRET_KEY }}" >> cloud/functions/.env
          echo "BREVO_API_KEY=${{ vars.BREVO_API_KEY }}" >> cloud/functions/.env
          echo "BREVO_CHECKIN_TEMPLATE_ID=${{ vars.BREVO_CHECKIN_TEMPLATE_ID }}" >> cloud/functions/.env


      - name: Deploy Firebase
        run: |
          npm install -g firebase-tools
          firebase deploy --only functions --project ${{ vars.FIREBASE_PROJECT }}
          firebase deploy --only hosting --project ${{ vars.FIREBASE_PROJECT }}


